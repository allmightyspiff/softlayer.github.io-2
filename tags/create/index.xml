<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
      <title>Create on SoftLayer API Examples </title>
    <link>/tags/create/</link>
    <language>en-US</language>
    <author>Enthusiastic Hugo User</author>
    <rights>Copyright (c) 2014, Enthusiastic Hugo User; all rights reserved.</rights>
    <updated>Thu, 01 Sep 2016 00:00:00 UTC</updated>
    
    <item>
      <title>Create a new virtual server with all options</title>
      <link>/php/createVsi/</link>
      <pubDate>Thu, 01 Sep 2016 00:00:00 UTC</pubDate>
      <author>Enthusiastic Hugo User</author>
      <guid>/php/createVsi/</guid>
      <description>&lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;&amp;lt;?php

/* You can use the getenv() module to pull your exported Username
and API key to keep from having to store them in your files */

require_once &#39;./vendor/autoload.php&#39;;
$apiUsername = getenv(&#39;SOFTLAYER_USERNAME&#39;);
$apiKey = getenv(&#39;SOFTLAYER_API_KEY&#39;);

$template = new stdClass();
$template-&amp;gt;location = 1441195;
$template-&amp;gt;datacenter-&amp;gt;name = &#39;dal10&#39;;
$template-&amp;gt;domain = &#39;example.com&#39;;
$template-&amp;gt;startCpus = 2;
$template-&amp;gt;maxMemory = 2048;
$template-&amp;gt;operatingSystemReferenceCode = &#39;CENTOS_6_64&#39;;
$template-&amp;gt;hostname = &#39;testphp&#39;;
$template-&amp;gt;localDiskFlag = True;
$template-&amp;gt;hourlyBillingFlag = True;
$template-&amp;gt;dedicatedAccountHostOnlyFlag = False;
$template-&amp;gt;primaryBackendNetworkComponent = 1286783;
$template-&amp;gt;primaryNetworkComponent = 1286781;
$template-&amp;gt;privateNetworkOnlyFlag = False;

try {
  $client = \SoftLayer\SoapClient::getClient(&#39;SoftLayer_Virtual_Guest&#39;,null, $apiUsername, $apiKey);
  $response = $client-&amp;gt;createObject($template);

  print_r($response);

 } catch(Exception $e) {
     echo &#39;Cannot compute. Error is: &#39; . $e-&amp;gt;getMessage();
}

?&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Create a new virtual server with all options</title>
      <link>/ruby/createVSI/</link>
      <pubDate>Thu, 01 Sep 2016 00:00:00 UTC</pubDate>
      <author>Enthusiastic Hugo User</author>
      <guid>/ruby/createVSI/</guid>
      <description>&lt;p&gt;When you are ready to place the order change &lt;code&gt;verifyOrder(productOrder)&lt;/code&gt; to &lt;code&gt;placeOrder(productOrder)&lt;/code&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;
require &#39;softlayer_api&#39;
require &#39;pp&#39;

client = SoftLayer::Client.new(:timeout =&amp;gt; 120)

productOrder = {
  &#39;virtualGuests&#39; =&amp;gt; [{
     &#39;hostname&#39; =&amp;gt; &#39;testRuby&#39;,
     &#39;domain&#39;   =&amp;gt; &#39;example.com&#39;,
     &#39;primaryBackendNetworkComponent&#39; =&amp;gt; { &#39;networkVlan&#39; =&amp;gt; { &#39;id&#39; =&amp;gt; 1286783 } }
  }],
  &#39;location&#39; =&amp;gt; 1441195,
  &#39;packageId&#39; =&amp;gt; 46,
  &#39;operatingSystemReferenceCode&#39; =&amp;gt; &#39;CENTOS_6_64&#39;, 
  &#39;useHourlyPricing&#39; =&amp;gt; false,
  &#39;prices&#39; =&amp;gt; [
     {&#39;id&#39; =&amp;gt; 1640 }, # 1 x 2.0 GHz Core
     {&#39;id&#39; =&amp;gt; 1644 }, # 1 GB RAM
     {&#39;id&#39; =&amp;gt; 13945 }, # CENTOS_6_64
     {&#39;id&#39; =&amp;gt; 1639 }, # 100 GB (SAN) First Disk
     {&#39;id&#39; =&amp;gt; 2277 }, # 100 GB (SAN) Second Disk
     {&#39;id&#39; =&amp;gt; 50367 }, # 250 GB Bandwidth
     {&#39;id&#39; =&amp;gt; 274 }, # 1 Gbps Public &amp;amp; Private Network Uplinks
     {&#39;id&#39; =&amp;gt; 21 }, # 1 IP Address
     {&#39;id&#39; =&amp;gt; 420 }, # Unlimited SSL VPN Users &amp;amp; 1 PPTP VPN User per account
     {&#39;id&#39; =&amp;gt; 56 }, # Host Ping and TCP Service Monitoring
     {&#39;id&#39; =&amp;gt; 57 }, # Email and Ticket
     {&#39;id&#39; =&amp;gt; 418 }, # NESSUS_VULNERABILITY_ASSESSMENT_REPORTING
     {&#39;id&#39; =&amp;gt; 905 }, # REBOOT_REMOTE_CONSOLE
     {&#39;id&#39; =&amp;gt; 58 }  # AUTOMATED_NOTIFICATION
  ]
}

order = client[&#39;Product_Order&#39;].verifyOrder(productOrder)

pp order

&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Create a new virtual server with all options</title>
      <link>/python/create_vsi_options/</link>
      <pubDate>Sat, 01 Aug 2015 00:00:00 UTC</pubDate>
      <author>Enthusiastic Hugo User</author>
      <guid>/python/create_vsi_options/</guid>
      <description>&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;&#39;&#39;&#39;
An example of how to create a VSI from the SL python library
&#39;&#39;&#39;
from __future__ import print_function
import SoftLayer
from SoftLayer.managers.vs import VSManager

def create_vsi():
    #Create a client to the SoftLayer_Account API service.
    #Note: currently set without the user ID and API key since
    #it will by default use the values set in the CLI
    #to use other values use SoftLayer.Client(sl_username, sl_api_key)
    client = SoftLayer.Client()
    vsi_mgr = VSManager(client)

    # uncomment to display create options
    # print(vsi_mgr.get_create_options())

    # common values
    datacenter = &#39;sjc01&#39; # the data center code
    domain = &#39;example.com&#39; # the domain name suffix for the host
    os_code = &#39;CENTOS_6_64&#39; # the operating system code
    local_disk = True # local disk or SAN
    hourly = True # hourly or monthly billing
    dedicated = False # multi-tenant or single tenant
    private_vlan = &#39;825831&#39; # VLAN for the server see VLAN list above
    nic_speed = 1000 # speed of network device
    disks = [100] # size of the disks
    private = True # private networking only or include public internet networking as well
    ssh_keys = [227113, 229467] # the IDs of the ssh keys to load on the server - use slcli sshkey list

    # server properties
    hostname = &#39;myhost&#39;
    cpus = 4
    memory = 8192
    tags = &#39;owner:bob,project:poc,type:docker&#39;

    # code that can verify the create operation without actually doing it
    # template = vsi_mgr.verify_create_instance(hostname=hostname, domain=domain,
    #                                 cpus=cpus, memory=memory, datacenter=datacenter,
    #                                 os_code=os_code, local_disk=local_disk,
    #                                 hourly=hourly, dedicated=dedicated,
    #                                 private_vlan=private_vlan, disks=disks,
    #                                 nic_speed=nic_speed, private=private,
    #                                 ssh_keys=ssh_keys, tags=tags)
    # print(template)

    result = vsi_mgr.create_instance(hostname=hostname, domain=domain,
                                     cpus=cpus, memory=memory, datacenter=datacenter,
                                     os_code=os_code, local_disk=local_disk,
                                     hourly=hourly, dedicated=dedicated,
                                     private_vlan=private_vlan, disks=disks,
                                     nic_speed=nic_speed, private=private,
                                     ssh_keys=ssh_keys, tags=tags)
    print(result)

if __name__ == &#39;__main__&#39;:
    create_vsi()

&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Create virtual server</title>
      <link>/rest/create_virtual_server/</link>
      <pubDate>Sun, 15 Feb 2015 00:00:00 UTC</pubDate>
      <author>Enthusiastic Hugo User</author>
      <guid>/rest/create_virtual_server/</guid>
      <description>&lt;p&gt;Operation: &lt;code&gt;POST&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;URL: &lt;code&gt;SoftLayer_Virtual_Guest.json?objectMask=id&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Example CURL:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;curl -X POST --data @vs_create.json --user userid:api_key
https://api.softlayer.com/rest/v3/SoftLayer_Virtual_Guest.json?objectMask=mask.id
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Input JSON:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{
    &amp;quot;parameters&amp;quot; : [
        {
            &amp;quot;hostname&amp;quot; : &amp;quot;myhostname&amp;quot;,
            &amp;quot;domain&amp;quot; : &amp;quot;my.domain.com&amp;quot;,
            &amp;quot;startCpus&amp;quot; : 1,
            &amp;quot;maxMemory&amp;quot; : 1024,
            &amp;quot;datacenter&amp;quot; : {
                &amp;quot;name&amp;quot; : &amp;quot;wdc01&amp;quot;
                },
            &amp;quot;hourlyBillingFlag&amp;quot; : true,
            &amp;quot;localDiskFlag&amp;quot; : true,
            &amp;quot;operatingSystemReferenceCode&amp;quot;: &amp;quot;UBUNTU_LATEST&amp;quot;
        }
    ]
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Example Response:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{&amp;quot;id&amp;quot;:7742740}
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
  </channel>
</rss>