<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
      <title>Deprecated on SoftLayer API Examples </title>
    <link>/tags/deprecated/</link>
    <language>en-US</language>
    <author>Enthusiastic Hugo User</author>
    <rights>Copyright (c) 2014, Enthusiastic Hugo User; all rights reserved.</rights>
    <updated>Wed, 07 Oct 2015 00:00:00 UTC</updated>
    
    <item>
      <title>Create a virtual server from an existing image template</title>
      <link>/ruby/create_server_from_template/</link>
      <pubDate>Wed, 07 Oct 2015 00:00:00 UTC</pubDate>
      <author>Enthusiastic Hugo User</author>
      <guid>/ruby/create_server_from_template/</guid>
      <description>&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;require &#39;softlayer_api&#39;
require &#39;pp&#39;

IMAGE_ID = &#39;foobar&#39; # change me. Image template global ID.

# Credentials to the API are read from a configuration file by default.
# See https://github.com/softlayer/softlayer-ruby/blob/master/lib/softlayer/Config.rb#L11-L44
SoftLayer::Client.default_client = SoftLayer::Client.new

order_template = {
    hostname: &#39;test&#39;,
    domain: &#39;example.com&#39;,
    datacenter: &#39;hou02&#39;,
    cores: 2, # 2 x 2.0 GHz Cores
    memory: 4, # 4GB RAM
    private_network_only: false,
    dedicated_host_only: false,
    #os_reference_code: &#39;CENTOS_6_64&#39;, # CentOS 6.latest minimal (64 bit)
    image_template: SoftLayer::ImageTemplate.template_with_global_id(IMAGE_ID),
    use_local_disk: false, # Use a SAN disk
    hourly: true # Charge me for hourly use, rather than monthly.
}

# Set order template in our order instance,
# Otherwise, you can skip using an order template hash, and just
# set values directly in the order instance like `order.cores = 2`.
order = SoftLayer::VirtualServerOrder.new
order_template.keys.each do |k|
    order.send(&amp;quot;#{k}=&amp;quot;, order_template[k])
end

pp order.verify
# Uncomment to place the order.
# server = order.place_order!
# pp server
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Order a vyatta server with placeOrder</title>
      <link>/php/order_vyatta/</link>
      <pubDate>Wed, 08 Jul 2015 00:00:00 UTC</pubDate>
      <author>Enthusiastic Hugo User</author>
      <guid>/php/order_vyatta/</guid>
      <description>&lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;&amp;lt;?php

require_once &#39;./vendor/autoload.php&#39;;
$apiUsername = getenv(&#39;SOFTLAYER_USERNAME&#39;);
$apiKey = getenv(&#39;SOFTLAYER_API_KEY&#39;);

$client = \SoftLayer\SoapClient::getClient(&#39;SoftLayer_Product_Order&#39;, null, $apiUser, $key);
$template = new stdClass();
$template_extra = new stdClass();
$template-&amp;gt;packageId = 174;
$template-&amp;gt;location  = 224092;
$template-&amp;gt;quantity  = 1;
$template_extra-&amp;gt;os = 21;  //vyatta
$template_extra-&amp;gt;hostname = &#39;foo-vga-small&#39;;
$template_extra-&amp;gt;domain = &#39;softlayer-singapore-test.com&#39;;

//These might be invalid now, please double check on ordering
$template_extra-&amp;gt;price_id = array(13739, // Single Quad Xeon 1270 3.4G 8M
                                   21010, // 4G
                                   878, // Raid
                                   //31693, // Raid 1
                                   1267, // 500G
                                   274, // 1GbE
                                   342, // 20T
                                   // 21, // 1IP
                                   56, // Ping/TCP Mon
                                   57, // Notification
                                   );

$my_template = new stdClass();

 for ($cnt = 0; $cnt &amp;lt; $template-&amp;gt;quantity; $cnt++) {
    $domain = new stdClass();
    $domain-&amp;gt;hostname = &amp;quot;$template_extra-&amp;gt;hostname-$cnt&amp;quot;;
    $domain-&amp;gt;domain = $template_extra-&amp;gt;domain;
    $template-&amp;gt;hardware[] = $domain;
  }
if (empty($template-&amp;gt;imageTemplateGlobalIdentifier))
{
    $template_extra-&amp;gt;price_id[] = $template_extra-&amp;gt;os;
}

foreach ($template_extra-&amp;gt;price_id as $id) {
    $price = new stdClass();
    $price-&amp;gt;id = $id;
    $template-&amp;gt;prices[] = $price;
}
$my_template-&amp;gt;orderContainers = array();
$my_template-&amp;gt;orderContainers[0]-&amp;gt;prices = $template-&amp;gt;prices;
$my_template-&amp;gt;orderContainers[0]-&amp;gt;hardware = $template-&amp;gt;hardware;
$my_template-&amp;gt;orderContainers[0]-&amp;gt;quantity = $template-&amp;gt;quantity;
$my_template-&amp;gt;orderContainers[0]-&amp;gt;location = $template-&amp;gt;location;
$my_template-&amp;gt;orderContainers[0]-&amp;gt;packageId = $template-&amp;gt;packageId;

print_r($my_template);
$result = $client-&amp;gt;verifyOrder($my_template);
print_r($result);
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Cancel software licenses by IP</title>
      <link>/perl/cancel_by_license/</link>
      <pubDate>Sun, 01 Sep 2013 00:00:00 UTC</pubDate>
      <author>Enthusiastic Hugo User</author>
      <guid>/perl/cancel_by_license/</guid>
      <description>&lt;pre&gt;&lt;code class=&#34;language-perl&#34;&gt;#!/usr/bin perl
use warnings;
use strict;
use Data::Dumper;
use SoftLayer::API::SOAP;

my $api_username = &#39;&#39;;
my $api_key = &#39;&#39;;

my $cPanelIp = &#39;127.0.0.1&#39;;
my $billingItemId;
my $accountId;

my $accountClient = SoftLayer::API::SOAP-&amp;gt;new(&#39;SoftLayer_Account&#39;, undef, $api_username, $api_key);
my $billingClient = SoftLayer::API::SOAP-&amp;gt;new(&#39;SoftLayer_Billing_Item_Cancellation_Request&#39;, undef, $api_username, $api_key);

my $objectMask = &amp;quot;mask.billingItem.id&amp;quot;;
$accountClient-&amp;gt;setObjectMask($objectMask);

my $licenses = $accountClient-&amp;gt;getActiveVirtualLicenses()-&amp;gt;result;

for my $i (0 .. $#{$licenses}) {
    my $license = $licenses-&amp;gt;[$i];
    if ($cPanelIp eq $license-&amp;gt;{&#39;ipAddress&#39;}) {
        $billingItemId = $license-&amp;gt;{&#39;billingItem&#39;}-&amp;gt;{&#39;id&#39;};
        $accountId = $license-&amp;gt;{&#39;accountId&#39;};
    }
}

my $cancellationRequestTemplateObject = {
    &#39;items&#39; =&amp;gt; [
            {
                &#39;billingItemId&#39; =&amp;gt; $billingItemId,
            }
    ],
    &#39;accountId&#39; =&amp;gt; $accountId
};

my $result = $billingClient-&amp;gt;createObject($cancellationRequestTemplateObject);
print Dumper($result);
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
  </channel>
</rss>