<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
      <title>Virtual Server on SoftLayer API Examples </title>
    <link>/tags/virtual-server/</link>
    <language>en-US</language>
    <author>Enthusiastic Hugo User</author>
    <rights>Copyright (c) 2014, Enthusiastic Hugo User; all rights reserved.</rights>
    <updated>Wed, 07 Oct 2015 00:00:00 UTC</updated>
    
    <item>
      <title>Create a virtual server from an existing image template</title>
      <link>/ruby/create_server_from_template/</link>
      <pubDate>Wed, 07 Oct 2015 00:00:00 UTC</pubDate>
      <author>Enthusiastic Hugo User</author>
      <guid>/ruby/create_server_from_template/</guid>
      <description>&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;require &#39;softlayer_api&#39;
require &#39;pp&#39;

IMAGE_ID = &#39;foobar&#39; # change me. Image template global ID.

# Credentials to the API are read from a configuration file by default.
# See https://github.com/softlayer/softlayer-ruby/blob/master/lib/softlayer/Config.rb#L11-L44
SoftLayer::Client.default_client = SoftLayer::Client.new

order_template = {
    hostname: &#39;test&#39;,
    domain: &#39;example.com&#39;,
    datacenter: &#39;hou02&#39;,
    cores: 2, # 2 x 2.0 GHz Cores
    memory: 4, # 4GB RAM
    private_network_only: false,
    dedicated_host_only: false,
    #os_reference_code: &#39;CENTOS_6_64&#39;, # CentOS 6.latest minimal (64 bit)
    image_template: SoftLayer::ImageTemplate.template_with_global_id(IMAGE_ID),
    use_local_disk: false, # Use a SAN disk
    hourly: true # Charge me for hourly use, rather than monthly.
}

# Set order template in our order instance,
# Otherwise, you can skip using an order template hash, and just
# set values directly in the order instance like `order.cores = 2`.
order = SoftLayer::VirtualServerOrder.new
order_template.keys.each do |k|
    order.send(&amp;quot;#{k}=&amp;quot;, order_template[k])
end

pp order.verify
# Uncomment to place the order.
# server = order.place_order!
# pp server
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Create a virtual server from an existing image template</title>
      <link>/python/create_server_from_template/</link>
      <pubDate>Mon, 01 Sep 2014 00:00:00 UTC</pubDate>
      <author>Enthusiastic Hugo User</author>
      <guid>/python/create_server_from_template/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;http://sldn.softlayer.com/reference/services/SoftLayer_Account/getPrivateBlockDeviceTemplateGroups&#34;&gt;getPrivateBlockDeviceTemplateGroups&lt;/a&gt; will return a list of all the templates that you have created on your account. Use this method to find the id of the template you want to create a server from.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;import SoftLayer
from pprint import pprint as pp

templateId = 12345

client = SoftLayer.Client()

mask = &amp;quot;mask[id,name,note]&amp;quot;
imageTemplates = client[&#39;SoftLayer_Account&#39;].getPrivateBlockDeviceTemplateGroups(mask=mask)
print(&amp;quot;ID - Name - Note&amp;quot;)
for template in imageTemplates:
    try:
        print(&amp;quot;%s - %s - %s&amp;quot; % (template[&#39;id&#39;], template[&#39;name&#39;], template[&#39;note&#39;]))
    except KeyError:
        print(&amp;quot;%s - %s - %s&amp;quot; % (template[&#39;id&#39;], template[&#39;name&#39;], &#39;None&#39;))

order = {
    &#39;complexType&#39;: &#39;SoftLayer_Container_Product_Order_Virtual_Guest&#39;,
    &#39;quantity&#39;: 1,
    &#39;virtualGuests&#39;: [
        {&#39;hostname&#39;: &#39;test-template&#39;, &#39;domain&#39;: &#39;example.com&#39;}
    ],
    &#39;location&#39;: 168642,  # San Jose 1
    &#39;packageId&#39;: 46,  # CCI Package
    &#39;prices&#39;: [
        {&#39;id&#39;: 1640},  # 1 x 2.0 GHz Core
        {&#39;id&#39;: 1644},  # 1 GB RAM
        {&#39;id&#39;:  905},  # Reboot / Remote Console
        {&#39;id&#39;:  272},  # 10 Mbps Public &amp;amp; Private Networks
        {&#39;id&#39;:50231},  # 1000 GB Bandwidth
        {&#39;id&#39;:   21},  # 1 IP Address
        {&#39;id&#39;: 2202},  # 25 GB (SAN)
        {&#39;id&#39;: 1684},  # CentOS 5 - Minimal Install (32 bit)
        {&#39;id&#39;:   55},  # Host Ping Monitoring
        {&#39;id&#39;:   57},  # Email and Ticket Notifications
        {&#39;id&#39;:   58},  # Automated Notification Response
        {&#39;id&#39;:  420},  # Unlimited SSL VPN Users &amp;amp; 1 PPTP VPN User per account
        {&#39;id&#39;:  418},  # Nessus Vulnerability Assessment &amp;amp; Reporting
    ],
    &#39;imageTemplateId&#39;: templateId
}

result = client[&#39;SoftLayer_Product_Order&#39;].verifyOrder(order)
pp(result)
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
  </channel>
</rss>