<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
      <title>Cli on SoftLayer API Examples </title>
    <link>/tags/cli/</link>
    <language>en-US</language>
    <author>Enthusiastic Hugo User</author>
    <rights>Copyright (c) 2014, Enthusiastic Hugo User; all rights reserved.</rights>
    <updated>Fri, 30 Sep 2016 00:00:00 UTC</updated>
    
    <item>
      <title>Create a SoftLayer Virtual Guest</title>
      <link>/terraform/create_vsi/</link>
      <pubDate>Fri, 30 Sep 2016 00:00:00 UTC</pubDate>
      <author>Enthusiastic Hugo User</author>
      <guid>/terraform/create_vsi/</guid>
      <description>

&lt;p&gt;This example will create a virtual guest running the latest offered version of Ubuntu in the Dallas 09 Datacenter.&lt;/p&gt;

&lt;h3 id=&#34;configuration-file:48b6aebd917fbdd1d3a987aab2d6e8bb&#34;&gt;Configuration File&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;provider &amp;quot;softlayer&amp;quot; {}

# Virtual Server created with existing SSH Key already in SoftLayer 

resource &amp;quot;softlayer_virtual_guest&amp;quot; &amp;quot;terraform&amp;quot; {
    name = &amp;quot;terraform&amp;quot;
    domain = &amp;quot;tinylab.info&amp;quot;
    ssh_keys = [&amp;quot;563523&amp;quot;]
    image = &amp;quot;UBUNTU_LATEST_64&amp;quot;
    region = &amp;quot;dal09&amp;quot;
    public_network_speed = 100
    cpu = 1
    ram = 1024
    local_disk = &amp;quot;false&amp;quot;
    hourly_billing = &amp;quot;true&amp;quot;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;terraform-plan:48b6aebd917fbdd1d3a987aab2d6e8bb&#34;&gt;Terraform Plan&lt;/h3&gt;

&lt;p&gt;The &lt;code&gt;terraform plan&lt;/code&gt; command will look at any &lt;code&gt;.tf&lt;/code&gt; file in the current directory and show you what Terraform would do if we applied the configuration aka running &lt;code&gt;terraform apply&lt;/code&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ terraform plan

+ softlayer_virtual_guest.terraform
    cpu:                  &amp;quot;1&amp;quot;
    domain:               &amp;quot;tinylab.info&amp;quot;
    hourly_billing:       &amp;quot;true&amp;quot;
    image:                &amp;quot;UBUNTU_LATEST_64&amp;quot;
    ipv4_address:         &amp;quot;&amp;lt;computed&amp;gt;&amp;quot;
    ipv4_address_private: &amp;quot;&amp;lt;computed&amp;gt;&amp;quot;
    local_disk:           &amp;quot;false&amp;quot;
    name:                 &amp;quot;terraform&amp;quot;
    private_network_only: &amp;quot;false&amp;quot;
    public_network_speed: &amp;quot;100&amp;quot;
    ram:                  &amp;quot;1024&amp;quot;
    region:               &amp;quot;dal09&amp;quot;
    ssh_keys.#:           &amp;quot;1&amp;quot;
    ssh_keys.0:           &amp;quot;563523&amp;quot;


Plan: 1 to add, 0 to change, 0 to destroy.
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;terraform-apply:48b6aebd917fbdd1d3a987aab2d6e8bb&#34;&gt;Terraform apply&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;$ terraform apply 

  cpu:                  &amp;quot;&amp;quot; =&amp;gt; &amp;quot;1&amp;quot;
  domain:               &amp;quot;&amp;quot; =&amp;gt; &amp;quot;tinylab.info&amp;quot;
  hourly_billing:       &amp;quot;&amp;quot; =&amp;gt; &amp;quot;true&amp;quot;
  image:                &amp;quot;&amp;quot; =&amp;gt; &amp;quot;UBUNTU_LATEST_64&amp;quot;
  ipv4_address:         &amp;quot;&amp;quot; =&amp;gt; &amp;quot;&amp;lt;computed&amp;gt;&amp;quot;
  ipv4_address_private: &amp;quot;&amp;quot; =&amp;gt; &amp;quot;&amp;lt;computed&amp;gt;&amp;quot;
  local_disk:           &amp;quot;&amp;quot; =&amp;gt; &amp;quot;false&amp;quot;
  name:                 &amp;quot;&amp;quot; =&amp;gt; &amp;quot;terraform&amp;quot;
  private_network_only: &amp;quot;&amp;quot; =&amp;gt; &amp;quot;false&amp;quot;
  public_network_speed: &amp;quot;&amp;quot; =&amp;gt; &amp;quot;100&amp;quot;
  ram:                  &amp;quot;&amp;quot; =&amp;gt; &amp;quot;1024&amp;quot;
  region:               &amp;quot;&amp;quot; =&amp;gt; &amp;quot;dal09&amp;quot;
  ssh_keys.#:           &amp;quot;&amp;quot; =&amp;gt; &amp;quot;1&amp;quot;
  ssh_keys.0:           &amp;quot;&amp;quot; =&amp;gt; &amp;quot;563523&amp;quot;

$ terraform show 

softlayer_virtual_guest.terraform:
  id = 24618829
  cpu = 1
  dedicated_acct_host_only = false
  domain = tinylab.info
  hourly_billing = true
  image = UBUNTU_LATEST_64
  ipv4_address = 169.44.104.77
  ipv4_address_private = 10.143.223.17
  local_disk = false
  name = terraform
  private_network_only = true
  public_network_speed = 100
  ram = 1024
  region = dal09
  ssh_keys.# = 1
  ssh_keys.0 = 563523
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Getting started with SoftLayer and Terraform</title>
      <link>/terraform/getting_started/</link>
      <pubDate>Fri, 30 Sep 2016 00:00:00 UTC</pubDate>
      <author>Enthusiastic Hugo User</author>
      <guid>/terraform/getting_started/</guid>
      <description>

&lt;h3 id=&#34;overview:90d2f5b321651d7e838fc1e3cf5f419b&#34;&gt;Overview&lt;/h3&gt;

&lt;p&gt;Terraform is a tool for building, changing, and versioning infrastructure safely and efficiently. Terraform can manage existing and popular service providers as well as custom in-house solutions. Terraform supports several Cloud Service providers by default but is also extensible with plugins written in Go.&lt;/p&gt;

&lt;p&gt;The infrastructure Terraform can manage includes low-level components such as compute instances, storage, and networking, as well as high-level components such as DNS entries, SaaS features, etc.&lt;/p&gt;

&lt;h3 id=&#34;installing-terraform:90d2f5b321651d7e838fc1e3cf5f419b&#34;&gt;Installing Terraform&lt;/h3&gt;

&lt;p&gt;You can grab the installer for your specific Operating System on the Terraform &lt;a href=&#34;https://www.terraform.io/downloads.html&#34;&gt;Download Page&lt;/a&gt;. Terraform will run on OS X, Linux, FreeBSD and Windows.&lt;/p&gt;

&lt;h3 id=&#34;terraform-configuration:90d2f5b321651d7e838fc1e3cf5f419b&#34;&gt;Terraform Configuration&lt;/h3&gt;

&lt;p&gt;Terraform uses text files to describe infrastructure and to set variables. These text files are called Terraform configurations and end in &lt;code&gt;.tf&lt;/code&gt;. This section talks about the format of these files as well as how they&amp;rsquo;re loaded.&lt;/p&gt;

&lt;p&gt;The format of the configuration files are able to be in two formats: Terraform format and JSON. The Terraform format is more human-readable, supports comments, and is the generally recommended format for most Terraform files. The JSON format is meant for machines to create, modify, and update, but can also be done by Terraform operators if you prefer. Terraform format ends in &lt;code&gt;.tf&lt;/code&gt; and JSON format ends in &lt;code&gt;.tf.json&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;If you don&amp;rsquo;t want to put credentials in your configuration file, you can leave them out and use &lt;code&gt;provider &amp;quot;softlayer&amp;quot; {}&lt;/code&gt; in the configuration file and instead set these environment variables:&lt;/p&gt;

&lt;p&gt;SOFTLAYER_USERNAME: Your SoftLayer username
SOFTLAYER_API_KEY: Your API key&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Install the SoftLayer CLI</title>
      <link>/ansible/install_sl_cli/</link>
      <pubDate>Wed, 23 Sep 2015 00:00:00 UTC</pubDate>
      <author>Enthusiastic Hugo User</author>
      <guid>/ansible/install_sl_cli/</guid>
      <description>&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;- hosts: all
  sudo: yes
  tasks:
    - name: Update apt cache
      apt: update_cache=yes

    - name: Install pip for the install of the CLI
      apt:
        pkg: &amp;quot;{{ item }}&amp;quot;
        state: present
      when: ansible_os_family == &#39;Debian&#39;
      with_items:
        - python-virtualenv
        - python-setuptools
        - python-pip

    - name: Install the SoftLayer CLI
      pip:
        name: softlayer
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
  </channel>
</rss>