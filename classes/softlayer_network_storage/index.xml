<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
      <title>Softlayer_network_storage on SoftLayer API Examples </title>
    <link>/classes/softlayer_network_storage/</link>
    <language>en-US</language>
    <author>Enthusiastic Hugo User</author>
    <rights>Copyright (c) 2014, Enthusiastic Hugo User; all rights reserved.</rights>
    <updated>Tue, 23 Aug 2016 00:00:00 UTC</updated>
    
    <item>
      <title>Create a snapshot schedule</title>
      <link>/php/enableSnapshots/</link>
      <pubDate>Tue, 23 Aug 2016 00:00:00 UTC</pubDate>
      <author>Enthusiastic Hugo User</author>
      <guid>/php/enableSnapshots/</guid>
      <description>&lt;p&gt;This method is not valid for Legacy iSCSI Storage Volumes. You need to have already purchased snapshot space for the script to work properly.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;&amp;lt;?php

/* You can use the getenv() module to pull your exported Username
and API key to keep from having to store them in your files */

require_once &#39;./vendor/autoload.php&#39;;
$apiUsername = getenv(&#39;SOFTLAYER_USERNAME&#39;);
$apiKey = getenv(&#39;SOFTLAYER_API_KEY&#39;);
$storage_id = 11657445;

$scheduleType = &#39;WEEKLY&#39;;
$retentionCount = &#39;20&#39;;
$minute = &#39;1&#39;;
$hour = &#39;13&#39;;
$dayOfWeek = &#39;SUNDAY&#39;;

try {
  $client = \SoftLayer\SoapClient::getClient(&#39;SoftLayer_Network_Storage&#39;, $storage_id, $apiUsername, $apiKey);
  $response = $client-&amp;gt;enableSnapshots($scheduleType, $retentionCount, $minute, $hour, $dayOfWeek);

  print_r($response);

 } catch(Exception $e) {
     echo &#39;Cannot compute. Error is: &#39; . $e-&amp;gt;getMessage();
}

?&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Create a snapshot schedule</title>
      <link>/python/enableSnapshots/</link>
      <pubDate>Tue, 23 Aug 2016 00:00:00 UTC</pubDate>
      <author>Enthusiastic Hugo User</author>
      <guid>/python/enableSnapshots/</guid>
      <description>&lt;p&gt;This method is not valid for Legacy iSCSI Storage Volumes. You need to have already purchased snapshot space for the script to work properly.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;import SoftLayer

client = SoftLayer.Client()
storageId = 11657445

# Define parameters for snapshot
scheduleType = &#39;WEEKLY&#39;
retentionCount = &#39;20&#39;
minute = &#39;1&#39;
hour = &#39;13&#39;
dayOfWeek = &#39;SUNDAY&#39;

try:
    result = client[&#39;SoftLayer_Network_Storage&#39;].enableSnapshots(scheduleType, retentionCount, minute, hour, dayOfWeek, id=storageId)
    print (result)
except SoftLayer.SoftLayerAPIError as e:
    print(&amp;quot;Error: &amp;quot;
          % (e.faultCode, e.faultString))
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Create a snapshot schedule</title>
      <link>/ruby/enableSnapshots/</link>
      <pubDate>Tue, 23 Aug 2016 00:00:00 UTC</pubDate>
      <author>Enthusiastic Hugo User</author>
      <guid>/ruby/enableSnapshots/</guid>
      <description>&lt;p&gt;This method is not valid for Legacy iSCSI Storage Volumes. You need to have already purchased snapshot space for the script to work properly.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;require &#39;softlayer_api&#39;
require &#39;pp&#39;

# Credentials to the API are read from a configuration file by default.
# See https://github.com/softlayer/softlayer-ruby/blob/master/lib/softlayer/Config.rb#L11-L44
client = SoftLayer::Client.new(:timeout =&amp;gt; 120)

storageId = 11657445

# Define parameters for snapshot
scheduleType = &#39;WEEKLY&#39;
retentionCount = &#39;20&#39;
minute = &#39;1&#39;
hour = &#39;13&#39;
dayOfWeek = &#39;SUNDAY&#39;

snap = client[&#39;SoftLayer_Network_Storage&#39;]
enable = snap.object_with_id(storageId).enableSnapshots(scheduleType, retentionCount, minute, hour, dayOfWeek)
pp enable 
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Find a billing item from a provisioned product</title>
      <link>/ruby/billingfromproduct/</link>
      <pubDate>Fri, 29 Jan 2016 00:00:00 UTC</pubDate>
      <author>Enthusiastic Hugo User</author>
      <guid>/ruby/billingfromproduct/</guid>
      <description>&lt;p&gt;In the following example we are looking for the Billing Item of an Endurance Storage volume with an ID of 1234567.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;# add your network storage id, it can be found by doing this call: http://sldn.softlayer.com/reference/services/SoftLayer_Account/getNasNetworkStorage
network_storage_id = 1234567
#
item = client[:Network_Storage].object_mask(&amp;quot;mask[billingItem[createDate,hoursUsed,hourlyRecurringFee,currentHourlyCharge]]&amp;quot;).object_with_id(network_storage_id).getObject
pp item[&#39;billingItem&#39;]
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Find a billing item from a provisioned product</title>
      <link>/rest/get_billing_id/</link>
      <pubDate>Wed, 30 Dec 2015 00:00:00 UTC</pubDate>
      <author>Enthusiastic Hugo User</author>
      <guid>/rest/get_billing_id/</guid>
      <description>&lt;p&gt;Operation: &lt;code&gt;GET&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Method: &lt;a href=&#34;http://sldn.softlayer.com/reference/services/SoftLayer_Network_Storage/getBillingItem&#34;&gt;&lt;code&gt;SoftLayer_Network_Storage::getBillingItem()&lt;/code&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;URL: SoftLayer_Network_Storage/getBillingItem&lt;/p&gt;

&lt;p&gt;To find a billing item of a provisioned product you would use the &lt;code&gt;getBillingItem&lt;/code&gt; call on the specific resource you are trying to locate. In the following example we are looking for the Billing Item of an Endurance Storage volume with an ID of 1234567.&lt;/p&gt;

&lt;p&gt;Example CURL:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;curl -su userid:api_key https://api.softlayer.com/rest/v3/SoftLayer_Network_Storage/1234567/getBillingItem
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Example Response:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{
    &amp;quot;allowCancellationFlag&amp;quot;: 1,
    &amp;quot;cancellationDate&amp;quot;: null,
    &amp;quot;categoryCode&amp;quot;: &amp;quot;storage_service_enterprise&amp;quot;,
    &amp;quot;createDate&amp;quot;: &amp;quot;2015-11-17T12:14:14-06:00&amp;quot;,
    &amp;quot;cycleStartDate&amp;quot;: &amp;quot;2015-12-04T00:07:24-06:00&amp;quot;,
    &amp;quot;description&amp;quot;: &amp;quot;Endurance Storage&amp;quot;,
    &amp;quot;id&amp;quot;: &amp;quot;87654321&amp;quot;,
    &amp;quot;laborFee&amp;quot;: &amp;quot;0&amp;quot;,
    &amp;quot;laborFeeTaxRate&amp;quot;: &amp;quot;0&amp;quot;,
    &amp;quot;lastBillDate&amp;quot;: &amp;quot;2015-12-04T00:07:24-06:00&amp;quot;,
    &amp;quot;modifyDate&amp;quot;: &amp;quot;2015-12-04T00:07:24-06:00&amp;quot;,
    &amp;quot;nextBillDate&amp;quot;: &amp;quot;2016-01-04T00:00:00-06:00&amp;quot;,
    &amp;quot;oneTimeFee&amp;quot;: &amp;quot;0&amp;quot;,
    &amp;quot;oneTimeFeeTaxRate&amp;quot;: &amp;quot;0&amp;quot;,
    &amp;quot;orderItemId&amp;quot;: 99999999,
    &amp;quot;parentId&amp;quot;: null,
    &amp;quot;recurringFee&amp;quot;: &amp;quot;0&amp;quot;,
    &amp;quot;recurringFeeTaxRate&amp;quot;: &amp;quot;0&amp;quot;,
    &amp;quot;recurringMonths&amp;quot;: 1,
    &amp;quot;serviceProviderId&amp;quot;: 1,
    &amp;quot;setupFee&amp;quot;: &amp;quot;0&amp;quot;,
    &amp;quot;setupFeeTaxRate&amp;quot;: &amp;quot;0&amp;quot;
}
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
  </channel>
</rss>